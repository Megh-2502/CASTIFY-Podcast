{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aditi\\\\OneDrive\\\\Desktop\\\\Podstream-main\\\\client\\\\src\\\\components\\\\OTP.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState, useRef } from 'react'\n// import styled from \"styled-components\";\n// import { useTheme } from \"styled-components\";\n// import OtpInput from 'react-otp-input';\n// import CircularProgress from \"@mui/material/CircularProgress\";\n// import { useDispatch } from 'react-redux';\n// import { openSnackbar } from \"../redux/snackbarSlice\";\n// import { generateOtp, verifyOtp } from '../api';\n\n// const Title = styled.div`\n//   font-size: 22px;\n//   font-weight: 500;\n//   color: ${({ theme }) => theme.text_primary};\n//   margin: 16px 22px;\n// `;\n\n// const OutlinedBox = styled.div`\n//   height: 44px;\n//   border-radius: 12px;\n//   border: 1px solid ${({ theme }) => theme.text_secondary};\n//   color: ${({ theme }) => theme.text_secondary};\n//   ${({ googleButton, theme }) =>\n//         googleButton &&\n//         `\n//     user-select: none; \n//   gap: 16px;`}\n//   ${({ button, theme }) =>\n//         button &&\n//         `\n//     user-select: none; \n//   border: none;\n//     background: ${theme.button};\n//     color: '${theme.text_secondary}';`}\n//     ${({ activeButton, theme }) =>\n//         activeButton &&\n//         `\n//     user-select: none; \n//   border: none;\n//     background: ${theme.primary};\n//     color: white;`}\n//   margin: 3px 20px;\n//   font-size: 14px;\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   font-weight: 500;\n//   padding: 0px 14px;\n// `;\n\n// const LoginText = styled.div`\n//   font-size: 14px;\n//   font-weight: 500;\n//   color: ${({ theme }) => theme.text_secondary};\n//   margin: 0px 26px 0px 26px;\n// `;\n// const Span = styled.span`\n//   color: ${({ theme }) => theme.primary};\n//   font-size: 12px;\n//   margin: 0px 26px 0px 26px;\n// `;\n\n// const Error = styled.div`\n//   color: red;\n//   font-size: 12px;\n//   margin: 2px 26px 8px 26px;\n//   display: block;\n//   ${({ error, theme }) =>\n//         error === \"\" &&\n//         `    display: none;\n//     `}\n// `;\n\n// const Timer = styled.div`\n//     color: ${({ theme }) => theme.text_secondary};\n//     font-size: 12px;\n//     margin: 2px 26px 8px 26px;\n//     display: block;\n// `;\n\n// const Resend = styled.div`\n//     color: ${({ theme }) => theme.primary};\n//     font-size: 14px;\n//     margin: 2px 26px 8px 26px;\n//     display: block;\n//     cursor: pointer;\n// `;\n\n// const OTP = ({ email, name, otpVerified, setOtpVerified, reason }) => {\n//     const theme = useTheme();\n//     const dispatch = useDispatch();\n\n//     const [otp, setOtp] = useState('');\n//     const [otpError, setOtpError] = useState('');\n//     const [otpLoading, setOtpLoading] = useState(false);\n//     const [disabled, setDisabled] = useState(true);\n//     const [showTimer, setShowTimer] = useState(false);\n//     const [otpSent, setOtpSent] = useState(false);\n//     const [timer, setTimer] = useState('00:00');\n\n//     const Ref = useRef(null);\n\n//     const getTimeRemaining = (e) => {\n//         const total = Date.parse(e) - Date.parse(new Date());\n//         const seconds = Math.floor((total / 1000) % 60);\n//         const minutes = Math.floor((total / 1000 / 60) % 60);\n//         const hours = Math.floor((total / 1000 / 60 / 60) % 24);\n//         return {\n//             total, hours, minutes, seconds\n//         };\n//     }\n\n//     const startTimer = (e) => {\n//         let { total, hours, minutes, seconds }\n//             = getTimeRemaining(e);\n//         if (total >= 0) {\n\n//             // update the timer\n//             // check if less than 10 then we need to \n//             // add '0' at the beginning of the variable\n//             setTimer(\n//                 (minutes > 9 ? minutes : '0' + minutes) + ':'\n//                 + (seconds > 9 ? seconds : '0' + seconds)\n//             )\n\n//         }\n//     }\n\n//     const clearTimer = (e) => {\n\n//         // If you adjust it you should also need to\n//         // adjust the Endtime formula we are about\n//         // to code next    \n//         setTimer('01:00');\n\n//         // If you try to remove this line the \n//         // updating of timer Variable will be\n//         // after 1000ms or 1sec\n//         if (Ref.current) clearInterval(Ref.current);\n//         const id = setInterval(() => {\n//             startTimer(e);\n//         }, 1000)\n//         Ref.current = id;\n//     }\n\n//     const getDeadTime = () => {\n//         let deadline = new Date();\n\n//         // This is where you need to adjust if \n//         // you entend to add more time\n//         deadline.setSeconds(deadline.getSeconds() + 60);\n//         return deadline;\n//     }\n\n//     const resendOtp = () => {\n//         setShowTimer(true);\n//         clearTimer(getDeadTime());\n//         sendOtp();\n//     }\n\n//     const sendOtp = async () => {\n//         await generateOtp(email, name, reason).then((res) => {\n//             if (res.status === 200) {\n//                 dispatch(\n//                     openSnackbar({\n//                         message: \"OTP sent Successfully\",\n//                         severity: \"success\",\n//                     })\n//                 );\n//                 setDisabled(true);\n//                 setOtp('');\n//                 setOtpError('');\n//                 setOtpLoading(false);\n//                 setOtpSent(true);\n//                 console.log(res.data);\n//             } else {\n//                 dispatch(\n//                     openSnackbar({\n//                         message: res.status,\n//                         severity: \"error\",\n//                     })\n//                 );\n//                 setOtp('');\n//                 setOtpError('');\n//                 setOtpLoading(false);\n//             }\n//         }).catch((err) => {\n//             dispatch(\n//                 openSnackbar({\n//                     message: err.message,\n//                     severity: \"error\",\n//                 })\n//             );\n//         });\n//     }\n\n//     const validateOtp = () => {\n//         setOtpLoading(true);\n//         setDisabled(true);\n//         verifyOtp(otp).then((res) => {\n//             if (res.status === 200) {\n//                 setOtpVerified(true);\n//                 setOtp('');\n//                 setOtpError('');\n//                 setDisabled(false);\n//                 setOtpLoading(false);\n//             } else {\n//                 setOtpError(res.data.message);\n//                 setDisabled(false);\n//                 setOtpLoading(false);\n//             }\n//         }).catch((err) => {\n//             dispatch(\n//                 openSnackbar({\n//                     message: err.message,\n//                     severity: \"error\",\n//                 })\n//             );\n//             setOtpError(err.message);\n//             setDisabled(false);\n//             setOtpLoading(false);\n//         });\n//     }\n\n//     useEffect(() => {\n//         sendOtp();\n//         clearTimer(getDeadTime());\n//     }, []);\n\n//     useEffect(() => {\n//         if (timer === '00:00') {\n//             setShowTimer(false);\n//         } else {\n//             setShowTimer(true);\n//         }\n//     }, [timer]);\n\n//     useEffect(() => {\n//         if (otp.length === 6) {\n//             setDisabled(false);\n//         } else {\n//             setDisabled(true);\n//         }\n//     }, [otp]);\n\n//     return (\n//         <div>\n//             <Title>VERIFY OTP</Title>\n//             <LoginText >A verification <b>&nbsp;OTP &nbsp;</b> has been sent to: </LoginText>\n//             <Span>{email}</Span>\n//             {!otpSent ?\n//                 <div style={{padding: '12px 26px', marginBottom: '20px', textAlign: 'center', display: 'flex',flexDirection: 'column',alignItems: 'center',gap: '14px',justifyContent:'center'}}>Sending OTP<CircularProgress color=\"inherit\" size={20} /></div>\n//                 :\n//                 <div>\n//                     <OtpInput\n//                         value={otp}\n//                         onChange={setOtp}\n//                         numInputs={6}\n//                         shouldAutoFocus={true}\n//                         inputStyle={{ fontSize: \"22px\", width: \"38px\", height: \"38px\", borderRadius: \"5px\", border: \"1px solid #ccc\", textAlign: \"center\", margin: \"6px 4px\", backgroundColor: 'transparent', color: theme.text_primary }}\n//                         containerStyle={{ padding: '8px 2px', justifyContent: 'center' }}\n//                         renderInput={(props) => <input {...props} />}\n//                     />\n//                     <Error error={otpError}><b>{otpError}</b></Error>\n\n//                     <OutlinedBox\n//                         button={true}\n//                         activeButton={!disabled}\n//                         style={{ marginTop: \"12px\", marginBottom: \"12px\" }}\n//                         onClick={() => validateOtp()}\n//                     >\n//                         {otpLoading ? (\n//                             <CircularProgress color=\"inherit\" size={20} />\n//                         ) : (\n//                             \"Submit\"\n//                         )}\n//                     </OutlinedBox>\n\n//                     {showTimer ?\n//                         <Timer>Resend in <b>{timer}</b></Timer>\n//                         :\n//                         <Resend onClick={() => resendOtp()}><b>Resend</b></Resend>\n//                     }\n//                 </div>\n//             }\n//         </div>\n//     )\n// }\n\n// export default OTP\nimport React, { useEffect, useState, useRef } from 'react';\nimport styled from \"styled-components\";\nimport { useTheme } from \"styled-components\";\nimport OtpInput from 'react-otp-input';\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { useDispatch } from 'react-redux';\nimport { openSnackbar } from \"../redux/snackbarSlice\";\nimport { generateOtp, verifyOtp } from '../api';\n\n// Styled Components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Title = styled.div`\n  font-size: 22px;\n  font-weight: 500;\n  color: ${_ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.text_primary;\n}};\n  margin: 16px 22px;\n`;\n_c = Title;\nconst OutlinedBox = styled.div`\n  height: 44px;\n  border-radius: 12px;\n  border: 1px solid ${_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.text_secondary;\n}};\n  color: ${_ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return theme.text_secondary;\n}};\n  ${_ref4 => {\n  let {\n    googleButton,\n    theme\n  } = _ref4;\n  return googleButton && `\n    user-select: none; \n    gap: 16px;`;\n}}\n  ${_ref5 => {\n  let {\n    button,\n    theme\n  } = _ref5;\n  return button && `\n    user-select: none; \n    border: none;\n    background: ${theme.button};\n    color: '${theme.text_secondary}';`;\n}}\n  ${_ref6 => {\n  let {\n    activeButton,\n    theme\n  } = _ref6;\n  return activeButton && `\n    user-select: none; \n    border: none;\n    background: ${theme.primary};\n    color: white;`;\n}}\n  margin: 3px 20px;\n  font-size: 14px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: 500;\n  padding: 0px 14px;\n`;\n_c2 = OutlinedBox;\nconst LoginText = styled.div`\n  font-size: 14px;\n  font-weight: 500;\n  color: ${_ref7 => {\n  let {\n    theme\n  } = _ref7;\n  return theme.text_secondary;\n}};\n  margin: 0px 26px 0px 26px;\n`;\n_c3 = LoginText;\nconst Span = styled.span`\n  color: ${_ref8 => {\n  let {\n    theme\n  } = _ref8;\n  return theme.primary;\n}};\n  font-size: 12px;\n  margin: 0px 26px 0px 26px;\n`;\n_c4 = Span;\nconst Error = styled.div`\n  color: red;\n  font-size: 12px;\n  margin: 2px 26px 8px 26px;\n  display: block;\n  ${_ref9 => {\n  let {\n    error\n  } = _ref9;\n  return error === \"\" && `\n    display: none;\n  `;\n}}\n`;\n_c5 = Error;\nconst Timer = styled.div`\n  color: ${_ref10 => {\n  let {\n    theme\n  } = _ref10;\n  return theme.text_secondary;\n}};\n  font-size: 12px;\n  margin: 2px 26px 8px 26px;\n  display: block;\n`;\n_c6 = Timer;\nconst Resend = styled.div`\n  color: ${_ref11 => {\n  let {\n    theme\n  } = _ref11;\n  return theme.primary;\n}};\n  font-size: 14px;\n  margin: 2px 26px 8px 26px;\n  display: block;\n  cursor: pointer;\n`;\n\n// OTP Component\n_c7 = Resend;\nconst OTP = _ref12 => {\n  _s();\n  let {\n    email,\n    name,\n    otpVerified,\n    setOtpVerified,\n    reason\n  } = _ref12;\n  const theme = useTheme();\n  const dispatch = useDispatch();\n  const [otp, setOtp] = useState('');\n  const [otpError, setOtpError] = useState('');\n  const [otpLoading, setOtpLoading] = useState(false);\n  const [disabled, setDisabled] = useState(true);\n  const [showTimer, setShowTimer] = useState(false);\n  const [otpSent, setOtpSent] = useState(false);\n  const [timer, setTimer] = useState('00:00');\n  const Ref = useRef(null);\n  const getTimeRemaining = endtime => {\n    const total = Date.parse(endtime) - Date.parse(new Date());\n    const seconds = Math.floor(total / 1000 % 60);\n    const minutes = Math.floor(total / 1000 / 60 % 60);\n    return {\n      total,\n      minutes,\n      seconds\n    };\n  };\n  const startTimer = endtime => {\n    let {\n      total,\n      minutes,\n      seconds\n    } = getTimeRemaining(endtime);\n    if (total >= 0) {\n      setTimer(`${minutes > 9 ? minutes : '0' + minutes}:${seconds > 9 ? seconds : '0' + seconds}`);\n    }\n  };\n  const clearTimer = endtime => {\n    setTimer('01:00');\n    if (Ref.current) clearInterval(Ref.current);\n    const id = setInterval(() => startTimer(endtime), 1000);\n    Ref.current = id;\n  };\n  const getDeadTime = () => {\n    let deadline = new Date();\n    deadline.setSeconds(deadline.getSeconds() + 60);\n    return deadline;\n  };\n  const resendOtp = () => {\n    setShowTimer(true);\n    clearTimer(getDeadTime());\n    sendOtp();\n  };\n  const sendOtp = async () => {\n    setOtpLoading(true);\n    try {\n      const res = await generateOtp(email, name, reason);\n      if (res.status === 200) {\n        dispatch(openSnackbar({\n          message: \"OTP sent Successfully\",\n          severity: \"success\"\n        }));\n        setOtpSent(true);\n        setOtp('');\n        setOtpError('');\n        setDisabled(true);\n      } else {\n        throw new Error(`Error: ${res.status}`);\n      }\n    } catch (err) {\n      dispatch(openSnackbar({\n        message: err.message || \"Network Error\",\n        severity: \"error\"\n      }));\n    } finally {\n      setOtpLoading(false);\n    }\n  };\n  const validateOtp = async () => {\n    setOtpLoading(true);\n    setDisabled(true);\n    try {\n      const res = await verifyOtp(otp);\n      if (res.status === 200) {\n        setOtpVerified(true);\n        setOtp('');\n        setOtpError('');\n      } else {\n        throw new Error(res.data.message);\n      }\n    } catch (err) {\n      setOtpError(err.message || \"Validation Failed\");\n      dispatch(openSnackbar({\n        message: err.message || \"Network Error\",\n        severity: \"error\"\n      }));\n    } finally {\n      setOtpLoading(false);\n      setDisabled(false);\n    }\n  };\n  useEffect(() => {\n    sendOtp();\n    clearTimer(getDeadTime());\n  }, []);\n  useEffect(() => {\n    if (timer === '00:00') {\n      setShowTimer(false);\n    } else {\n      setShowTimer(true);\n    }\n  }, [timer]);\n  useEffect(() => {\n    if (otp.length === 6) {\n      setDisabled(false);\n    } else {\n      setDisabled(true);\n    }\n  }, [otp]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"VERIFY OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginText, {\n      children: [\"A verification \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"\\xA0OTP \\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 33\n      }, this), \" has been sent to: \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Span, {\n      children: email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 7\n    }, this), !otpSent ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '12px 26px',\n        marginBottom: '20px',\n        textAlign: 'center',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        gap: '14px',\n        justifyContent: 'center'\n      },\n      children: [\"Sending OTP\", /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"inherit\",\n        size: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(OtpInput, {\n        value: otp,\n        onChange: setOtp,\n        numInputs: 6,\n        shouldAutoFocus: true,\n        inputStyle: {\n          fontSize: \"22px\",\n          width: \"38px\",\n          height: \"38px\",\n          borderRadius: \"5px\",\n          border: \"1px solid #ccc\",\n          textAlign: \"center\",\n          margin: \"6px 4px\",\n          backgroundColor: 'transparent',\n          color: theme.text_primary\n        },\n        containerStyle: {\n          padding: '8px 2px',\n          justifyContent: 'center'\n        },\n        renderInput: props => /*#__PURE__*/_jsxDEV(\"input\", {\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Error, {\n        error: otpError,\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: otpError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(OutlinedBox, {\n        button: true,\n        activeButton: !disabled,\n        style: {\n          marginTop: \"12px\",\n          marginBottom: \"12px\"\n        },\n        onClick: () => validateOtp(),\n        children: otpLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"inherit\",\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 15\n        }, this) : \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 11\n      }, this), showTimer ? /*#__PURE__*/_jsxDEV(Timer, {\n        children: [\"Resend in \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: timer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Resend, {\n        onClick: () => resendOtp(),\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Resend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 519,\n    columnNumber: 5\n  }, this);\n};\n_s(OTP, \"H8Lp1h3ZS0G/NF8+8Qjc3F7Pl/Y=\", false, function () {\n  return [useTheme, useDispatch];\n});\n_c8 = OTP;\nexport default OTP;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"OutlinedBox\");\n$RefreshReg$(_c3, \"LoginText\");\n$RefreshReg$(_c4, \"Span\");\n$RefreshReg$(_c5, \"Error\");\n$RefreshReg$(_c6, \"Timer\");\n$RefreshReg$(_c7, \"Resend\");\n$RefreshReg$(_c8, \"OTP\");","map":{"version":3,"names":["React","useEffect","useState","useRef","styled","useTheme","OtpInput","CircularProgress","useDispatch","openSnackbar","generateOtp","verifyOtp","jsxDEV","_jsxDEV","Title","div","_ref","theme","text_primary","_c","OutlinedBox","_ref2","text_secondary","_ref3","_ref4","googleButton","_ref5","button","_ref6","activeButton","primary","_c2","LoginText","_ref7","_c3","Span","span","_ref8","_c4","Error","_ref9","error","_c5","Timer","_ref10","_c6","Resend","_ref11","_c7","OTP","_ref12","_s","email","name","otpVerified","setOtpVerified","reason","dispatch","otp","setOtp","otpError","setOtpError","otpLoading","setOtpLoading","disabled","setDisabled","showTimer","setShowTimer","otpSent","setOtpSent","timer","setTimer","Ref","getTimeRemaining","endtime","total","Date","parse","seconds","Math","floor","minutes","startTimer","clearTimer","current","clearInterval","id","setInterval","getDeadTime","deadline","setSeconds","getSeconds","resendOtp","sendOtp","res","status","message","severity","err","validateOtp","data","length","children","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","marginBottom","textAlign","display","flexDirection","alignItems","gap","justifyContent","color","size","value","onChange","numInputs","shouldAutoFocus","inputStyle","fontSize","width","height","borderRadius","border","margin","backgroundColor","containerStyle","renderInput","props","marginTop","onClick","_c8","$RefreshReg$"],"sources":["C:/Users/aditi/OneDrive/Desktop/Podstream-main/client/src/components/OTP.jsx"],"sourcesContent":["// import React, { useEffect, useState, useRef } from 'react'\n// import styled from \"styled-components\";\n// import { useTheme } from \"styled-components\";\n// import OtpInput from 'react-otp-input';\n// import CircularProgress from \"@mui/material/CircularProgress\";\n// import { useDispatch } from 'react-redux';\n// import { openSnackbar } from \"../redux/snackbarSlice\";\n// import { generateOtp, verifyOtp } from '../api';\n\n\n// const Title = styled.div`\n//   font-size: 22px;\n//   font-weight: 500;\n//   color: ${({ theme }) => theme.text_primary};\n//   margin: 16px 22px;\n// `;\n\n\n// const OutlinedBox = styled.div`\n//   height: 44px;\n//   border-radius: 12px;\n//   border: 1px solid ${({ theme }) => theme.text_secondary};\n//   color: ${({ theme }) => theme.text_secondary};\n//   ${({ googleButton, theme }) =>\n//         googleButton &&\n//         `\n//     user-select: none; \n//   gap: 16px;`}\n//   ${({ button, theme }) =>\n//         button &&\n//         `\n//     user-select: none; \n//   border: none;\n//     background: ${theme.button};\n//     color: '${theme.text_secondary}';`}\n//     ${({ activeButton, theme }) =>\n//         activeButton &&\n//         `\n//     user-select: none; \n//   border: none;\n//     background: ${theme.primary};\n//     color: white;`}\n//   margin: 3px 20px;\n//   font-size: 14px;\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   font-weight: 500;\n//   padding: 0px 14px;\n// `;\n\n\n// const LoginText = styled.div`\n//   font-size: 14px;\n//   font-weight: 500;\n//   color: ${({ theme }) => theme.text_secondary};\n//   margin: 0px 26px 0px 26px;\n// `;\n// const Span = styled.span`\n//   color: ${({ theme }) => theme.primary};\n//   font-size: 12px;\n//   margin: 0px 26px 0px 26px;\n// `;\n\n// const Error = styled.div`\n//   color: red;\n//   font-size: 12px;\n//   margin: 2px 26px 8px 26px;\n//   display: block;\n//   ${({ error, theme }) =>\n//         error === \"\" &&\n//         `    display: none;\n//     `}\n// `;\n\n// const Timer = styled.div`\n//     color: ${({ theme }) => theme.text_secondary};\n//     font-size: 12px;\n//     margin: 2px 26px 8px 26px;\n//     display: block;\n// `;\n\n// const Resend = styled.div`\n//     color: ${({ theme }) => theme.primary};\n//     font-size: 14px;\n//     margin: 2px 26px 8px 26px;\n//     display: block;\n//     cursor: pointer;\n// `;\n\n\n// const OTP = ({ email, name, otpVerified, setOtpVerified, reason }) => {\n//     const theme = useTheme();\n//     const dispatch = useDispatch();\n\n\n//     const [otp, setOtp] = useState('');\n//     const [otpError, setOtpError] = useState('');\n//     const [otpLoading, setOtpLoading] = useState(false);\n//     const [disabled, setDisabled] = useState(true);\n//     const [showTimer, setShowTimer] = useState(false);\n//     const [otpSent, setOtpSent] = useState(false);\n//     const [timer, setTimer] = useState('00:00');\n\n\n//     const Ref = useRef(null);\n\n//     const getTimeRemaining = (e) => {\n//         const total = Date.parse(e) - Date.parse(new Date());\n//         const seconds = Math.floor((total / 1000) % 60);\n//         const minutes = Math.floor((total / 1000 / 60) % 60);\n//         const hours = Math.floor((total / 1000 / 60 / 60) % 24);\n//         return {\n//             total, hours, minutes, seconds\n//         };\n//     }\n\n//     const startTimer = (e) => {\n//         let { total, hours, minutes, seconds }\n//             = getTimeRemaining(e);\n//         if (total >= 0) {\n\n//             // update the timer\n//             // check if less than 10 then we need to \n//             // add '0' at the beginning of the variable\n//             setTimer(\n//                 (minutes > 9 ? minutes : '0' + minutes) + ':'\n//                 + (seconds > 9 ? seconds : '0' + seconds)\n//             )\n\n//         }\n//     }\n\n//     const clearTimer = (e) => {\n\n//         // If you adjust it you should also need to\n//         // adjust the Endtime formula we are about\n//         // to code next    \n//         setTimer('01:00');\n\n//         // If you try to remove this line the \n//         // updating of timer Variable will be\n//         // after 1000ms or 1sec\n//         if (Ref.current) clearInterval(Ref.current);\n//         const id = setInterval(() => {\n//             startTimer(e);\n//         }, 1000)\n//         Ref.current = id;\n//     }\n\n//     const getDeadTime = () => {\n//         let deadline = new Date();\n\n//         // This is where you need to adjust if \n//         // you entend to add more time\n//         deadline.setSeconds(deadline.getSeconds() + 60);\n//         return deadline;\n//     }\n\n//     const resendOtp = () => {\n//         setShowTimer(true);\n//         clearTimer(getDeadTime());\n//         sendOtp();\n//     }\n\n//     const sendOtp = async () => {\n//         await generateOtp(email, name, reason).then((res) => {\n//             if (res.status === 200) {\n//                 dispatch(\n//                     openSnackbar({\n//                         message: \"OTP sent Successfully\",\n//                         severity: \"success\",\n//                     })\n//                 );\n//                 setDisabled(true);\n//                 setOtp('');\n//                 setOtpError('');\n//                 setOtpLoading(false);\n//                 setOtpSent(true);\n//                 console.log(res.data);\n//             } else {\n//                 dispatch(\n//                     openSnackbar({\n//                         message: res.status,\n//                         severity: \"error\",\n//                     })\n//                 );\n//                 setOtp('');\n//                 setOtpError('');\n//                 setOtpLoading(false);\n//             }\n//         }).catch((err) => {\n//             dispatch(\n//                 openSnackbar({\n//                     message: err.message,\n//                     severity: \"error\",\n//                 })\n//             );\n//         });\n//     }\n\n//     const validateOtp = () => {\n//         setOtpLoading(true);\n//         setDisabled(true);\n//         verifyOtp(otp).then((res) => {\n//             if (res.status === 200) {\n//                 setOtpVerified(true);\n//                 setOtp('');\n//                 setOtpError('');\n//                 setDisabled(false);\n//                 setOtpLoading(false);\n//             } else {\n//                 setOtpError(res.data.message);\n//                 setDisabled(false);\n//                 setOtpLoading(false);\n//             }\n//         }).catch((err) => {\n//             dispatch(\n//                 openSnackbar({\n//                     message: err.message,\n//                     severity: \"error\",\n//                 })\n//             );\n//             setOtpError(err.message);\n//             setDisabled(false);\n//             setOtpLoading(false);\n//         });\n//     }\n\n//     useEffect(() => {\n//         sendOtp();\n//         clearTimer(getDeadTime());\n//     }, []);\n\n//     useEffect(() => {\n//         if (timer === '00:00') {\n//             setShowTimer(false);\n//         } else {\n//             setShowTimer(true);\n//         }\n//     }, [timer]);\n\n\n//     useEffect(() => {\n//         if (otp.length === 6) {\n//             setDisabled(false);\n//         } else {\n//             setDisabled(true);\n//         }\n//     }, [otp]);\n\n\n\n\n//     return (\n//         <div>\n//             <Title>VERIFY OTP</Title>\n//             <LoginText >A verification <b>&nbsp;OTP &nbsp;</b> has been sent to: </LoginText>\n//             <Span>{email}</Span>\n//             {!otpSent ?\n//                 <div style={{padding: '12px 26px', marginBottom: '20px', textAlign: 'center', display: 'flex',flexDirection: 'column',alignItems: 'center',gap: '14px',justifyContent:'center'}}>Sending OTP<CircularProgress color=\"inherit\" size={20} /></div>\n//                 :\n//                 <div>\n//                     <OtpInput\n//                         value={otp}\n//                         onChange={setOtp}\n//                         numInputs={6}\n//                         shouldAutoFocus={true}\n//                         inputStyle={{ fontSize: \"22px\", width: \"38px\", height: \"38px\", borderRadius: \"5px\", border: \"1px solid #ccc\", textAlign: \"center\", margin: \"6px 4px\", backgroundColor: 'transparent', color: theme.text_primary }}\n//                         containerStyle={{ padding: '8px 2px', justifyContent: 'center' }}\n//                         renderInput={(props) => <input {...props} />}\n//                     />\n//                     <Error error={otpError}><b>{otpError}</b></Error>\n\n\n//                     <OutlinedBox\n//                         button={true}\n//                         activeButton={!disabled}\n//                         style={{ marginTop: \"12px\", marginBottom: \"12px\" }}\n//                         onClick={() => validateOtp()}\n//                     >\n//                         {otpLoading ? (\n//                             <CircularProgress color=\"inherit\" size={20} />\n//                         ) : (\n//                             \"Submit\"\n//                         )}\n//                     </OutlinedBox>\n\n//                     {showTimer ?\n//                         <Timer>Resend in <b>{timer}</b></Timer>\n//                         :\n//                         <Resend onClick={() => resendOtp()}><b>Resend</b></Resend>\n//                     }\n//                 </div>\n//             }\n//         </div>\n//     )\n// }\n\n// export default OTP\nimport React, { useEffect, useState, useRef } from 'react';\nimport styled from \"styled-components\";\nimport { useTheme } from \"styled-components\";\nimport OtpInput from 'react-otp-input';\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { useDispatch } from 'react-redux';\nimport { openSnackbar } from \"../redux/snackbarSlice\";\nimport { generateOtp, verifyOtp } from '../api';\n\n// Styled Components\nconst Title = styled.div`\n  font-size: 22px;\n  font-weight: 500;\n  color: ${({ theme }) => theme.text_primary};\n  margin: 16px 22px;\n`;\n\nconst OutlinedBox = styled.div`\n  height: 44px;\n  border-radius: 12px;\n  border: 1px solid ${({ theme }) => theme.text_secondary};\n  color: ${({ theme }) => theme.text_secondary};\n  ${({ googleButton, theme }) =>\n    googleButton &&\n    `\n    user-select: none; \n    gap: 16px;`}\n  ${({ button, theme }) =>\n    button &&\n    `\n    user-select: none; \n    border: none;\n    background: ${theme.button};\n    color: '${theme.text_secondary}';`}\n  ${({ activeButton, theme }) =>\n    activeButton &&\n    `\n    user-select: none; \n    border: none;\n    background: ${theme.primary};\n    color: white;`}\n  margin: 3px 20px;\n  font-size: 14px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: 500;\n  padding: 0px 14px;\n`;\n\nconst LoginText = styled.div`\n  font-size: 14px;\n  font-weight: 500;\n  color: ${({ theme }) => theme.text_secondary};\n  margin: 0px 26px 0px 26px;\n`;\n\nconst Span = styled.span`\n  color: ${({ theme }) => theme.primary};\n  font-size: 12px;\n  margin: 0px 26px 0px 26px;\n`;\n\nconst Error = styled.div`\n  color: red;\n  font-size: 12px;\n  margin: 2px 26px 8px 26px;\n  display: block;\n  ${({ error }) =>\n    error === \"\" &&\n    `\n    display: none;\n  `}\n`;\n\nconst Timer = styled.div`\n  color: ${({ theme }) => theme.text_secondary};\n  font-size: 12px;\n  margin: 2px 26px 8px 26px;\n  display: block;\n`;\n\nconst Resend = styled.div`\n  color: ${({ theme }) => theme.primary};\n  font-size: 14px;\n  margin: 2px 26px 8px 26px;\n  display: block;\n  cursor: pointer;\n`;\n\n// OTP Component\nconst OTP = ({ email, name, otpVerified, setOtpVerified, reason }) => {\n  const theme = useTheme();\n  const dispatch = useDispatch();\n\n  const [otp, setOtp] = useState('');\n  const [otpError, setOtpError] = useState('');\n  const [otpLoading, setOtpLoading] = useState(false);\n  const [disabled, setDisabled] = useState(true);\n  const [showTimer, setShowTimer] = useState(false);\n  const [otpSent, setOtpSent] = useState(false);\n  const [timer, setTimer] = useState('00:00');\n\n  const Ref = useRef(null);\n\n  const getTimeRemaining = (endtime) => {\n    const total = Date.parse(endtime) - Date.parse(new Date());\n    const seconds = Math.floor((total / 1000) % 60);\n    const minutes = Math.floor((total / 1000 / 60) % 60);\n    return { total, minutes, seconds };\n  };\n\n  const startTimer = (endtime) => {\n    let { total, minutes, seconds } = getTimeRemaining(endtime);\n    if (total >= 0) {\n      setTimer(\n        `${minutes > 9 ? minutes : '0' + minutes}:${seconds > 9 ? seconds : '0' + seconds}`\n      );\n    }\n  };\n\n  const clearTimer = (endtime) => {\n    setTimer('01:00');\n    if (Ref.current) clearInterval(Ref.current);\n    const id = setInterval(() => startTimer(endtime), 1000);\n    Ref.current = id;\n  };\n\n  const getDeadTime = () => {\n    let deadline = new Date();\n    deadline.setSeconds(deadline.getSeconds() + 60);\n    return deadline;\n  };\n\n  const resendOtp = () => {\n    setShowTimer(true);\n    clearTimer(getDeadTime());\n    sendOtp();\n  };\n\n  const sendOtp = async () => {\n    setOtpLoading(true);\n    try {\n      const res = await generateOtp(email, name, reason);\n      if (res.status === 200) {\n        dispatch(\n          openSnackbar({\n            message: \"OTP sent Successfully\",\n            severity: \"success\",\n          })\n        );\n        setOtpSent(true);\n        setOtp('');\n        setOtpError('');\n        setDisabled(true);\n      } else {\n        throw new Error(`Error: ${res.status}`);\n      }\n    } catch (err) {\n      dispatch(\n        openSnackbar({\n          message: err.message || \"Network Error\",\n          severity: \"error\",\n        })\n      );\n    } finally {\n      setOtpLoading(false);\n    }\n  };\n\n  const validateOtp = async () => {\n    setOtpLoading(true);\n    setDisabled(true);\n    try {\n      const res = await verifyOtp(otp);\n      if (res.status === 200) {\n        setOtpVerified(true);\n        setOtp('');\n        setOtpError('');\n      } else {\n        throw new Error(res.data.message);\n      }\n    } catch (err) {\n      setOtpError(err.message || \"Validation Failed\");\n      dispatch(\n        openSnackbar({\n          message: err.message || \"Network Error\",\n          severity: \"error\",\n        })\n      );\n    } finally {\n      setOtpLoading(false);\n      setDisabled(false);\n    }\n  };\n\n  useEffect(() => {\n    sendOtp();\n    clearTimer(getDeadTime());\n  }, []);\n\n  useEffect(() => {\n    if (timer === '00:00') {\n      setShowTimer(false);\n    } else {\n      setShowTimer(true);\n    }\n  }, [timer]);\n\n  useEffect(() => {\n    if (otp.length === 6) {\n      setDisabled(false);\n    } else {\n      setDisabled(true);\n    }\n  }, [otp]);\n\n  return (\n    <div>\n      <Title>VERIFY OTP</Title>\n      <LoginText>A verification <b>&nbsp;OTP &nbsp;</b> has been sent to: </LoginText>\n      <Span>{email}</Span>\n      {!otpSent ? (\n        <div style={{ padding: '12px 26px', marginBottom: '20px', textAlign: 'center', display: 'flex', flexDirection: 'column', alignItems: 'center', gap: '14px', justifyContent: 'center' }}>\n          Sending OTP<CircularProgress color=\"inherit\" size={20} />\n        </div>\n      ) : (\n        <div>\n          <OtpInput\n            value={otp}\n            onChange={setOtp}\n            numInputs={6}\n            shouldAutoFocus={true}\n            inputStyle={{ fontSize: \"22px\", width: \"38px\", height: \"38px\", borderRadius: \"5px\", border: \"1px solid #ccc\", textAlign: \"center\", margin: \"6px 4px\", backgroundColor: 'transparent', color: theme.text_primary }}\n            containerStyle={{ padding: '8px 2px', justifyContent: 'center' }}\n            renderInput={(props) => <input {...props} />}\n          />\n          <Error error={otpError}><b>{otpError}</b></Error>\n\n          <OutlinedBox\n            button={true}\n            activeButton={!disabled}\n            style={{ marginTop: \"12px\", marginBottom: \"12px\" }}\n            onClick={() => validateOtp()}\n          >\n            {otpLoading ? (\n              <CircularProgress color=\"inherit\" size={20} />\n            ) : (\n              \"Submit\"\n            )}\n          </OutlinedBox>\n\n          {showTimer ? (\n            <Timer>Resend in <b>{timer}</b></Timer>\n          ) : (\n            <Resend onClick={() => resendOtp()}><b>Resend</b></Resend>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default OTP;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,YAAY,QAAQ,wBAAwB;AACrD,SAASC,WAAW,EAAEC,SAAS,QAAQ,QAAQ;;AAE/C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,KAAK,GAAGV,MAAM,CAACW,GAAI;AACzB;AACA;AACA,WAAWC,IAAA;EAAA,IAAC;IAAEC;EAAM,CAAC,GAAAD,IAAA;EAAA,OAAKC,KAAK,CAACC,YAAY;AAAA,CAAC;AAC7C;AACA,CAAC;AAACC,EAAA,GALIL,KAAK;AAOX,MAAMM,WAAW,GAAGhB,MAAM,CAACW,GAAI;AAC/B;AACA;AACA,sBAAsBM,KAAA;EAAA,IAAC;IAAEJ;EAAM,CAAC,GAAAI,KAAA;EAAA,OAAKJ,KAAK,CAACK,cAAc;AAAA,CAAC;AAC1D,WAAWC,KAAA;EAAA,IAAC;IAAEN;EAAM,CAAC,GAAAM,KAAA;EAAA,OAAKN,KAAK,CAACK,cAAc;AAAA,CAAC;AAC/C,IAAIE,KAAA;EAAA,IAAC;IAAEC,YAAY;IAAER;EAAM,CAAC,GAAAO,KAAA;EAAA,OACxBC,YAAY,IACX;AACL;AACA,eAAe;AAAA,CAAC;AAChB,IAAIC,KAAA;EAAA,IAAC;IAAEC,MAAM;IAAEV;EAAM,CAAC,GAAAS,KAAA;EAAA,OAClBC,MAAM,IACL;AACL;AACA;AACA,kBAAkBV,KAAK,CAACU,MAAO;AAC/B,cAAcV,KAAK,CAACK,cAAe,IAAG;AAAA,CAAC;AACvC,IAAIM,KAAA;EAAA,IAAC;IAAEC,YAAY;IAAEZ;EAAM,CAAC,GAAAW,KAAA;EAAA,OACxBC,YAAY,IACX;AACL;AACA;AACA,kBAAkBZ,KAAK,CAACa,OAAQ;AAChC,kBAAkB;AAAA,CAAC;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GA/BIX,WAAW;AAiCjB,MAAMY,SAAS,GAAG5B,MAAM,CAACW,GAAI;AAC7B;AACA;AACA,WAAWkB,KAAA;EAAA,IAAC;IAAEhB;EAAM,CAAC,GAAAgB,KAAA;EAAA,OAAKhB,KAAK,CAACK,cAAc;AAAA,CAAC;AAC/C;AACA,CAAC;AAACY,GAAA,GALIF,SAAS;AAOf,MAAMG,IAAI,GAAG/B,MAAM,CAACgC,IAAK;AACzB,WAAWC,KAAA;EAAA,IAAC;IAAEpB;EAAM,CAAC,GAAAoB,KAAA;EAAA,OAAKpB,KAAK,CAACa,OAAO;AAAA,CAAC;AACxC;AACA;AACA,CAAC;AAACQ,GAAA,GAJIH,IAAI;AAMV,MAAMI,KAAK,GAAGnC,MAAM,CAACW,GAAI;AACzB;AACA;AACA;AACA;AACA,IAAIyB,KAAA;EAAA,IAAC;IAAEC;EAAM,CAAC,GAAAD,KAAA;EAAA,OACVC,KAAK,KAAK,EAAE,IACX;AACL;AACA,GAAG;AAAA,CAAC;AACJ,CAAC;AAACC,GAAA,GAVIH,KAAK;AAYX,MAAMI,KAAK,GAAGvC,MAAM,CAACW,GAAI;AACzB,WAAW6B,MAAA;EAAA,IAAC;IAAE3B;EAAM,CAAC,GAAA2B,MAAA;EAAA,OAAK3B,KAAK,CAACK,cAAc;AAAA,CAAC;AAC/C;AACA;AACA;AACA,CAAC;AAACuB,GAAA,GALIF,KAAK;AAOX,MAAMG,MAAM,GAAG1C,MAAM,CAACW,GAAI;AAC1B,WAAWgC,MAAA;EAAA,IAAC;IAAE9B;EAAM,CAAC,GAAA8B,MAAA;EAAA,OAAK9B,KAAK,CAACa,OAAO;AAAA,CAAC;AACxC;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAkB,GAAA,GARMF,MAAM;AASZ,MAAMG,GAAG,GAAGC,MAAA,IAA0D;EAAAC,EAAA;EAAA,IAAzD;IAAEC,KAAK;IAAEC,IAAI;IAAEC,WAAW;IAAEC,cAAc;IAAEC;EAAO,CAAC,GAAAN,MAAA;EAC/D,MAAMjC,KAAK,GAAGZ,QAAQ,EAAE;EACxB,MAAMoD,QAAQ,GAAGjD,WAAW,EAAE;EAE9B,MAAM,CAACkD,GAAG,EAAEC,MAAM,CAAC,GAAGzD,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAAC0D,QAAQ,EAAEC,WAAW,CAAC,GAAG3D,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC4D,UAAU,EAAEC,aAAa,CAAC,GAAG7D,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAAC8D,QAAQ,EAAEC,WAAW,CAAC,GAAG/D,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACgE,SAAS,EAAEC,YAAY,CAAC,GAAGjE,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACkE,OAAO,EAAEC,UAAU,CAAC,GAAGnE,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACoE,KAAK,EAAEC,QAAQ,CAAC,GAAGrE,QAAQ,CAAC,OAAO,CAAC;EAE3C,MAAMsE,GAAG,GAAGrE,MAAM,CAAC,IAAI,CAAC;EAExB,MAAMsE,gBAAgB,GAAIC,OAAO,IAAK;IACpC,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAAC,GAAGE,IAAI,CAACC,KAAK,CAAC,IAAID,IAAI,EAAE,CAAC;IAC1D,MAAME,OAAO,GAAGC,IAAI,CAACC,KAAK,CAAEL,KAAK,GAAG,IAAI,GAAI,EAAE,CAAC;IAC/C,MAAMM,OAAO,GAAGF,IAAI,CAACC,KAAK,CAAEL,KAAK,GAAG,IAAI,GAAG,EAAE,GAAI,EAAE,CAAC;IACpD,OAAO;MAAEA,KAAK;MAAEM,OAAO;MAAEH;IAAQ,CAAC;EACpC,CAAC;EAED,MAAMI,UAAU,GAAIR,OAAO,IAAK;IAC9B,IAAI;MAAEC,KAAK;MAAEM,OAAO;MAAEH;IAAQ,CAAC,GAAGL,gBAAgB,CAACC,OAAO,CAAC;IAC3D,IAAIC,KAAK,IAAI,CAAC,EAAE;MACdJ,QAAQ,CACL,GAAEU,OAAO,GAAG,CAAC,GAAGA,OAAO,GAAG,GAAG,GAAGA,OAAQ,IAAGH,OAAO,GAAG,CAAC,GAAGA,OAAO,GAAG,GAAG,GAAGA,OAAQ,EAAC,CACpF;IACH;EACF,CAAC;EAED,MAAMK,UAAU,GAAIT,OAAO,IAAK;IAC9BH,QAAQ,CAAC,OAAO,CAAC;IACjB,IAAIC,GAAG,CAACY,OAAO,EAAEC,aAAa,CAACb,GAAG,CAACY,OAAO,CAAC;IAC3C,MAAME,EAAE,GAAGC,WAAW,CAAC,MAAML,UAAU,CAACR,OAAO,CAAC,EAAE,IAAI,CAAC;IACvDF,GAAG,CAACY,OAAO,GAAGE,EAAE;EAClB,CAAC;EAED,MAAME,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIC,QAAQ,GAAG,IAAIb,IAAI,EAAE;IACzBa,QAAQ,CAACC,UAAU,CAACD,QAAQ,CAACE,UAAU,EAAE,GAAG,EAAE,CAAC;IAC/C,OAAOF,QAAQ;EACjB,CAAC;EAED,MAAMG,SAAS,GAAGA,CAAA,KAAM;IACtBzB,YAAY,CAAC,IAAI,CAAC;IAClBgB,UAAU,CAACK,WAAW,EAAE,CAAC;IACzBK,OAAO,EAAE;EACX,CAAC;EAED,MAAMA,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B9B,aAAa,CAAC,IAAI,CAAC;IACnB,IAAI;MACF,MAAM+B,GAAG,GAAG,MAAMpF,WAAW,CAAC0C,KAAK,EAAEC,IAAI,EAAEG,MAAM,CAAC;MAClD,IAAIsC,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;QACtBtC,QAAQ,CACNhD,YAAY,CAAC;UACXuF,OAAO,EAAE,uBAAuB;UAChCC,QAAQ,EAAE;QACZ,CAAC,CAAC,CACH;QACD5B,UAAU,CAAC,IAAI,CAAC;QAChBV,MAAM,CAAC,EAAE,CAAC;QACVE,WAAW,CAAC,EAAE,CAAC;QACfI,WAAW,CAAC,IAAI,CAAC;MACnB,CAAC,MAAM;QACL,MAAM,IAAI1B,KAAK,CAAE,UAASuD,GAAG,CAACC,MAAO,EAAC,CAAC;MACzC;IACF,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZzC,QAAQ,CACNhD,YAAY,CAAC;QACXuF,OAAO,EAAEE,GAAG,CAACF,OAAO,IAAI,eAAe;QACvCC,QAAQ,EAAE;MACZ,CAAC,CAAC,CACH;IACH,CAAC,SAAS;MACRlC,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC;EAED,MAAMoC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9BpC,aAAa,CAAC,IAAI,CAAC;IACnBE,WAAW,CAAC,IAAI,CAAC;IACjB,IAAI;MACF,MAAM6B,GAAG,GAAG,MAAMnF,SAAS,CAAC+C,GAAG,CAAC;MAChC,IAAIoC,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;QACtBxC,cAAc,CAAC,IAAI,CAAC;QACpBI,MAAM,CAAC,EAAE,CAAC;QACVE,WAAW,CAAC,EAAE,CAAC;MACjB,CAAC,MAAM;QACL,MAAM,IAAItB,KAAK,CAACuD,GAAG,CAACM,IAAI,CAACJ,OAAO,CAAC;MACnC;IACF,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZrC,WAAW,CAACqC,GAAG,CAACF,OAAO,IAAI,mBAAmB,CAAC;MAC/CvC,QAAQ,CACNhD,YAAY,CAAC;QACXuF,OAAO,EAAEE,GAAG,CAACF,OAAO,IAAI,eAAe;QACvCC,QAAQ,EAAE;MACZ,CAAC,CAAC,CACH;IACH,CAAC,SAAS;MACRlC,aAAa,CAAC,KAAK,CAAC;MACpBE,WAAW,CAAC,KAAK,CAAC;IACpB;EACF,CAAC;EAEDhE,SAAS,CAAC,MAAM;IACd4F,OAAO,EAAE;IACTV,UAAU,CAACK,WAAW,EAAE,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAENvF,SAAS,CAAC,MAAM;IACd,IAAIqE,KAAK,KAAK,OAAO,EAAE;MACrBH,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,MAAM;MACLA,YAAY,CAAC,IAAI,CAAC;IACpB;EACF,CAAC,EAAE,CAACG,KAAK,CAAC,CAAC;EAEXrE,SAAS,CAAC,MAAM;IACd,IAAIyD,GAAG,CAAC2C,MAAM,KAAK,CAAC,EAAE;MACpBpC,WAAW,CAAC,KAAK,CAAC;IACpB,CAAC,MAAM;MACLA,WAAW,CAAC,IAAI,CAAC;IACnB;EACF,CAAC,EAAE,CAACP,GAAG,CAAC,CAAC;EAET,oBACE7C,OAAA;IAAAyF,QAAA,gBACEzF,OAAA,CAACC,KAAK;MAAAwF,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,eACzB7F,OAAA,CAACmB,SAAS;MAAAsE,QAAA,GAAC,iBAAe,eAAAzF,OAAA;QAAAyF,QAAA,EAAG;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,uBAAmB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAY,eAChF7F,OAAA,CAACsB,IAAI;MAAAmE,QAAA,EAAElD;IAAK;MAAAmD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,EACnB,CAACtC,OAAO,gBACPvD,OAAA;MAAK8F,KAAK,EAAE;QAAEC,OAAO,EAAE,WAAW;QAAEC,YAAY,EAAE,MAAM;QAAEC,SAAS,EAAE,QAAQ;QAAEC,OAAO,EAAE,MAAM;QAAEC,aAAa,EAAE,QAAQ;QAAEC,UAAU,EAAE,QAAQ;QAAEC,GAAG,EAAE,MAAM;QAAEC,cAAc,EAAE;MAAS,CAAE;MAAAb,QAAA,GAAC,aAC3K,eAAAzF,OAAA,CAACN,gBAAgB;QAAC6G,KAAK,EAAC,SAAS;QAACC,IAAI,EAAE;MAAG;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACrD,gBAEN7F,OAAA;MAAAyF,QAAA,gBACEzF,OAAA,CAACP,QAAQ;QACPgH,KAAK,EAAE5D,GAAI;QACX6D,QAAQ,EAAE5D,MAAO;QACjB6D,SAAS,EAAE,CAAE;QACbC,eAAe,EAAE,IAAK;QACtBC,UAAU,EAAE;UAAEC,QAAQ,EAAE,MAAM;UAAEC,KAAK,EAAE,MAAM;UAAEC,MAAM,EAAE,MAAM;UAAEC,YAAY,EAAE,KAAK;UAAEC,MAAM,EAAE,gBAAgB;UAAEjB,SAAS,EAAE,QAAQ;UAAEkB,MAAM,EAAE,SAAS;UAAEC,eAAe,EAAE,aAAa;UAAEb,KAAK,EAAEnG,KAAK,CAACC;QAAa,CAAE;QAClNgH,cAAc,EAAE;UAAEtB,OAAO,EAAE,SAAS;UAAEO,cAAc,EAAE;QAAS,CAAE;QACjEgB,WAAW,EAAGC,KAAK,iBAAKvH,OAAA;UAAA,GAAWuH;QAAK;UAAA7B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAK;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC7C,eACF7F,OAAA,CAAC0B,KAAK;QAACE,KAAK,EAAEmB,QAAS;QAAA0C,QAAA,eAACzF,OAAA;UAAAyF,QAAA,EAAI1C;QAAQ;UAAA2C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAK;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eAEjD7F,OAAA,CAACO,WAAW;QACVO,MAAM,EAAE,IAAK;QACbE,YAAY,EAAE,CAACmC,QAAS;QACxB2C,KAAK,EAAE;UAAE0B,SAAS,EAAE,MAAM;UAAExB,YAAY,EAAE;QAAO,CAAE;QACnDyB,OAAO,EAAEA,CAAA,KAAMnC,WAAW,EAAG;QAAAG,QAAA,EAE5BxC,UAAU,gBACTjD,OAAA,CAACN,gBAAgB;UAAC6G,KAAK,EAAC,SAAS;UAACC,IAAI,EAAE;QAAG;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,GAE9C;MACD;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACW,EAEbxC,SAAS,gBACRrD,OAAA,CAAC8B,KAAK;QAAA2D,QAAA,GAAC,YAAU,eAAAzF,OAAA;UAAAyF,QAAA,EAAIhC;QAAK;UAAAiC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,gBAEvC7F,OAAA,CAACiC,MAAM;QAACwF,OAAO,EAAEA,CAAA,KAAM1C,SAAS,EAAG;QAAAU,QAAA,eAACzF,OAAA;UAAAyF,QAAA,EAAG;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAI;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAClD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEV,CAAC;AAACvD,EAAA,CA1KIF,GAAG;EAAA,QACO5C,QAAQ,EACLG,WAAW;AAAA;AAAA+H,GAAA,GAFxBtF,GAAG;AA4KT,eAAeA,GAAG;AAAC,IAAA9B,EAAA,EAAAY,GAAA,EAAAG,GAAA,EAAAI,GAAA,EAAAI,GAAA,EAAAG,GAAA,EAAAG,GAAA,EAAAuF,GAAA;AAAAC,YAAA,CAAArH,EAAA;AAAAqH,YAAA,CAAAzG,GAAA;AAAAyG,YAAA,CAAAtG,GAAA;AAAAsG,YAAA,CAAAlG,GAAA;AAAAkG,YAAA,CAAA9F,GAAA;AAAA8F,YAAA,CAAA3F,GAAA;AAAA2F,YAAA,CAAAxF,GAAA;AAAAwF,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}