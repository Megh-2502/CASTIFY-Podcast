{"ast":null,"code":"import axios from \"axios\";\n//import jwt_decode from \"jwt-decode\";\n// const API = axios.create({ baseURL: `https://castify.onrender.com/api` });\n\n//auth\nexport const signIn = async _ref => {\n  let {\n    email,\n    password\n  } = _ref;\n  return await axios.post(\"http://localhost:3000/auth/signin\", {\n    email,\n    password\n  });\n};\nexport const signUp = async _ref2 => {\n  let {\n    name,\n    email,\n    password\n  } = _ref2;\n  return await API.post(\"/auth/signup\", {\n    name,\n    email,\n    password\n  });\n};\nexport const googleSignIn = async _ref3 => {\n  let {\n    name,\n    email,\n    img\n  } = _ref3;\n  return await API.post(\"/auth/google\", {\n    name,\n    email,\n    img\n  });\n};\nexport const findUserByEmail = async email => await API.get(`/auth/findbyemail?email=${email}`);\nexport const generateOtp = async (email, name, reason) => await API.get(`/auth/generateotp?email=${email}&name=${name}&reason=${reason}`);\nexport const verifyOtp = async otp => await API.get(`/auth/verifyotp?code=${otp}`);\nexport const resetPassword = async (email, password) => await API.put(`/auth/forgetpassword`, {\n  email,\n  password\n});\n//user api\nexport const getUsers = async token => await API.get(\"/user\", {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n}, {\n  withCredentials: true\n});\nexport const searchUsers = async (search, token) => await API.get(`users/search/${search}`, {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n}, {\n  withCredentials: true\n});\n//podcast api\nexport const createPodcast = async (podcast, token) => await API.post(\"/podcasts\", podcast, {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n}, {\n  withCredentials: true\n});\nexport const getPodcasts = async () => await API.get(\"/podcasts\");\nexport const addEpisodes = async (podcast, token) => await API.post(\"/podcasts/episode\", podcast, {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n}, {\n  withCredentials: true\n});\nexport const favoritePodcast = async (id, token) => await API.post(`/podcasts/favorit`, {\n  id: id\n}, {\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n}, {\n  withCredentials: true\n});\nexport const getRandomPodcast = async () => await API.get(\"/podcasts/random\");\nexport const getPodcastByTags = async tags => await API.get(`/podcasts/tags?tags=${tags}`);\nexport const getPodcastByCategory = async category => await API.get(`/podcasts/category?q=${category}`);\nexport const getMostPopularPodcast = async () => await API.get(\"/podcasts/mostpopular\");\nexport const getPodcastById = async id => await API.get(`/podcasts/get/${id}`);\nexport const addView = async id => await API.post(`/podcasts/addview/${id}`);\nexport const searchPodcast = async search => await API.get(`/podcasts/search?q=${search}`);","map":{"version":3,"names":["axios","signIn","_ref","email","password","post","signUp","_ref2","name","API","googleSignIn","_ref3","img","findUserByEmail","get","generateOtp","reason","verifyOtp","otp","resetPassword","put","getUsers","token","headers","Authorization","withCredentials","searchUsers","search","createPodcast","podcast","getPodcasts","addEpisodes","favoritePodcast","id","getRandomPodcast","getPodcastByTags","tags","getPodcastByCategory","category","getMostPopularPodcast","getPodcastById","addView","searchPodcast"],"sources":["C:/Users/aditi/OneDrive/Desktop/CASTIFY/client/src/api/index.js"],"sourcesContent":["import axios from \"axios\";\n//import jwt_decode from \"jwt-decode\";\n// const API = axios.create({ baseURL: `https://castify.onrender.com/api` });\n\n//auth\nexport const signIn = async ({ email, password }) =>\n  await axios.post(\"http://localhost:3000/auth/signin\", { email, password });\nexport const signUp = async ({ name, email, password }) =>\n  await API.post(\"/auth/signup\", {\n    name,\n    email,\n    password,\n  });\nexport const googleSignIn = async ({ name, email, img }) =>\n  await API.post(\"/auth/google\", {\n    name,\n    email,\n    img,\n  });\nexport const findUserByEmail = async (email) =>\n  await API.get(`/auth/findbyemail?email=${email}`);\nexport const generateOtp = async (email, name, reason) =>\n  await API.get(\n    `/auth/generateotp?email=${email}&name=${name}&reason=${reason}`\n  );\nexport const verifyOtp = async (otp) =>\n  await API.get(`/auth/verifyotp?code=${otp}`);\nexport const resetPassword = async (email, password) =>\n  await API.put(`/auth/forgetpassword`, { email, password });\n//user api\nexport const getUsers = async (token) =>\n  await API.get(\n    \"/user\",\n    { headers: { Authorization: `Bearer ${token}` } },\n    {\n      withCredentials: true,\n    }\n  );\nexport const searchUsers = async (search, token) =>\n  await API.get(\n    `users/search/${search}`,\n    { headers: { Authorization: `Bearer ${token}` } },\n    { withCredentials: true }\n  );\n//podcast api\nexport const createPodcast = async (podcast, token) =>\n  await API.post(\n    \"/podcasts\",\n    podcast,\n    { headers: { Authorization: `Bearer ${token}` } },\n    { withCredentials: true }\n  );\nexport const getPodcasts = async () => await API.get(\"/podcasts\");\nexport const addEpisodes = async (podcast, token) =>\n  await API.post(\n    \"/podcasts/episode\",\n    podcast,\n    { headers: { Authorization: `Bearer ${token}` } },\n    { withCredentials: true }\n  );\nexport const favoritePodcast = async (id, token) =>\n  await API.post(\n    `/podcasts/favorit`,\n    { id: id },\n    { headers: { Authorization: `Bearer ${token}` } },\n    { withCredentials: true }\n  );\nexport const getRandomPodcast = async () => await API.get(\"/podcasts/random\");\nexport const getPodcastByTags = async (tags) =>\n  await API.get(`/podcasts/tags?tags=${tags}`);\nexport const getPodcastByCategory = async (category) =>\n  await API.get(`/podcasts/category?q=${category}`);\nexport const getMostPopularPodcast = async () =>\n  await API.get(\"/podcasts/mostpopular\");\nexport const getPodcastById = async (id) =>\n  await API.get(`/podcasts/get/${id}`);\nexport const addView = async (id) => await API.post(`/podcasts/addview/${id}`);\nexport const searchPodcast = async (search) =>\n  await API.get(`/podcasts/search?q=${search}`);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}