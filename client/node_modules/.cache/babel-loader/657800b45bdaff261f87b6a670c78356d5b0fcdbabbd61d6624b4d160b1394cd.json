{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { useSelector } from 'react-redux';\n// import styled from 'styled-components';\n// import { getMostPopularPodcast } from '../api/index';\n// import { getPodcastByCategory } from '../api';\n// import { PodcastCard } from '../components/PodcastCard.jsx'\n// import { getUsers } from '../api/index';\n// import { Link } from 'react-router-dom';\n// import { CircularProgress } from '@mui/material';\n\n// const DashboardMain = styled.div`\n// padding: 20px 30px;\n// padding-bottom: 200px;\n// height: 100%;\n// overflow-y: scroll;\n// display: flex;\n// flex-direction: column;\n// gap: 20px;\n// @media (max-width: 768px){\n//   padding: 6px 10px;\n// }\n// `;\n// const FilterContainer = styled.div`\n// display: flex;\n// flex-direction: column;\n// ${({ box, theme }) => box && `\n// background-color: ${theme.bg};\n//   border-radius: 10px;\n//   padding: 20px 30px;\n// `}\n// background-color: ${({ theme }) => theme.bg};\n//   border-radius: 10px;\n//   padding: 20px 30px;\n// `;\n// const Topic = styled.div`\n//   color: ${({ theme }) => theme.text_primary};\n//   font-size: 24px;\n//   font-weight: 540;\n//   display: flex;\n//   justify-content: space-between;\n//   align-items: center;\n//   @maedia (max-width: 768px){\n//     font-size: 18px;\n//   }\n// `;\n// const Span = styled.span`\n//   color: ${({ theme }) => theme.text_secondary};\n//   font-size: 16px;\n//   font-weight: 400;\n//   cursor: pointer;\n//   @media (max-width: 768px){\n//     font-size: 14px;\n//   }\n//   color: ${({ theme }) => theme.primary};\n//   &:hover{\n//     transition: 0.2s ease-in-out;\n//   }\n//   `;\n// const Podcasts = styled.div`\n// display: flex;\n// flex-wrap: wrap;\n// gap: 14px;\n// padding: 18px 6px;\n// //center the items if only one item present\n// @media (max-width: 550px){\n//   justify-content: center;\n// }\n// `;\n\n// const Loader = styled.div`\n// display: flex;\n// justify-content: center;\n// align-items: center;\n// height: 100%;\n// width: 100%;\n// `\n// const DisplayNo = styled.div`\n// display: flex;\n// justify-content: center;\n// align-items: center;\n// height: 100%;\n// width: 100%;\n// color: ${({ theme }) => theme.text_primary};\n// `\n\n// const Dashboard = ({ setSignInOpen }) => {\n//   const [mostPopular, setMostPopular] = useState([]);\n//   const [user, setUser] = useState();\n//   const [comedy, setComedy] = useState([]);\n//   const [news, setNews] = useState([]);\n//   const [sports, setsports] = useState([]);\n//   const [crime, setCrime] = useState([]);\n//   const [loading, setLoading] = useState(false);\n\n//   //user\n//   const { currentUser } = useSelector(state => state.user);\n\n//   const token = localStorage.getItem(\"podstreamtoken\");\n//   const getUser = async () => {\n//     await getUsers(token).then((res) => {\n//       setUser(res.data)\n//     }).then((error) => {\n//       console.log(error)\n//     });\n//   }\n\n//   const getPopularPodcast = async () => {\n//     await getMostPopularPodcast()\n//       .then((res) => {\n//         setMostPopular(res.data)\n//         console.log(res.data)\n//       })\n//       .catch((error) => {\n//         console.log(error)\n//       });\n//   }\n\n//   const getCommedyPodcasts = async () => {\n//     getPodcastByCategory(\"comedy\")\n//       .then((res) => {\n//         setComedy(res.data)\n//         console.log(res.data)\n//       })\n//       .catch((error) => console.log(error));\n//   }\n\n//   const getNewsPodcasts = async () => {\n//     getPodcastByCategory(\"news\")\n//       .then((res) => {\n//         setNews(res.data)\n//         console.log(res.data)\n//       })\n//       .catch((error) => console.log(error));\n//   }\n\n//   const getSportsPodcasts = async () => {\n//     getPodcastByCategory(\"sports\")\n//       .then((res) => {\n//         setsports(res.data)\n//         console.log(res.data)\n//       })\n//       .catch((error) => console.log(error));\n//   }\n\n//   const getCrimePodcasts = async () => {\n//     getPodcastByCategory(\"crime\")\n//       .then((res) => {\n//         setCrime(res.data)\n//         console.log(res.data)\n//       })\n//       .catch((error) => console.log(error));\n//   }\n\n//   const getallData = async () => {\n//     setLoading(true);\n//     if (currentUser) {\n//       setLoading(true);\n//       await getUser();\n//     }\n//     await getPopularPodcast();\n//     await getCommedyPodcasts();\n//     await getNewsPodcasts();\n//     await getCommedyPodcasts();\n//     await getCrimePodcasts();\n//     await getSportsPodcasts();\n//     setLoading(false);\n//   }\n\n//   useEffect(() => {\n//     getallData();\n//   }, [currentUser])\n\n//   return (\n//     <DashboardMain>\n//       {loading ?\n//         <Loader>\n//           <CircularProgress />\n//         </Loader>\n//         :\n//         <>\n//           {currentUser && user?.podcasts?.length > 0 &&\n//             <FilterContainer box={true}>\n//               <Topic>Your Uploads\n//                 <Link to={`/profile`} style={{ textDecoration: \"none\" }}>\n//                   <Span>Show All</Span>\n//                 </Link>\n//               </Topic>\n//               <Podcasts>\n//                 {user?.podcasts.slice(0, 10).map((podcast) => (\n//                   <PodcastCard podcast={podcast} user={user} setSignInOpen={setSignInOpen} />\n//                 ))}\n//               </Podcasts>\n//             </FilterContainer>\n//           }\n//           <FilterContainer>\n//             <Topic>Most Popular\n//               <Link to={`/showpodcasts/mostpopular`} style={{ textDecoration: \"none\" }}>\n//                 <Span>Show All</Span>\n//               </Link>\n//             </Topic>\n//             <Podcasts>\n//               {mostPopular.slice(0, 10).map((podcast) => (\n//                 <PodcastCard podcast={podcast} user={user} setSignInOpen={setSignInOpen} />\n//               ))}\n//             </Podcasts>\n//           </FilterContainer>\n//           <FilterContainer>\n//             <Topic>Comedy\n//               <Link to={`/showpodcasts/comedy`} style={{ textDecoration: \"none\" }}>\n//                 <Span>Show All</Span>\n//               </Link>\n//             </Topic>\n//             <Podcasts>\n//               {comedy.slice(0, 10).map((podcast) => (\n//                 <PodcastCard podcast={podcast} user={user} setSignInOpen={setSignInOpen} />\n//               ))}\n//             </Podcasts>\n//           </FilterContainer>\n//           <FilterContainer>\n//             <Link to={`/showpodcasts/news`} style={{ textDecoration: \"none\" }}>\n//               <Topic>News\n//                 <Span>Show All</Span>\n//               </Topic>\n//             </Link>\n//             <Podcasts>\n//               {news.slice(0, 10).map((podcast) => (\n//                 <PodcastCard podcast={podcast} user={user} setSignInOpen={setSignInOpen} />\n//               ))}\n//             </Podcasts>\n//           </FilterContainer>\n//           <FilterContainer>\n//             <Link to={`/showpodcasts/crime`} style={{ textDecoration: \"none\" }}>\n//               <Topic>Crime\n//                 <Span>Show All</Span>\n//               </Topic>\n//             </Link>\n//             <Podcasts>\n//               {crime.slice(0, 10).map((podcast) => (\n//                 <PodcastCard podcast={podcast} user={user} setSignInOpen={setSignInOpen} />\n//               ))}\n//             </Podcasts>\n//           </FilterContainer>\n//           <FilterContainer>\n//             <Link to={`/showpodcasts/sports`} style={{ textDecoration: \"none\" }}>\n//               <Topic>Sports\n//                 <Span>Show All</Span>\n//               </Topic>\n//             </Link>\n//             <Podcasts>\n//               {sports.slice(0, 10).map((podcast) => (\n//                 <PodcastCard podcast={podcast} user={user} setSignInOpen={setSignInOpen} />\n//               ))}\n//             </Podcasts>\n//           </FilterContainer>\n//         </>\n//       }\n//     </DashboardMain>\n//   )\n// }\n\n// export default Dashboard","map":{"version":3,"names":[],"sources":["C:/Users/aditi/OneDrive/Desktop/CASTIFY/client/src/pages/Dashboard.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { useSelector } from 'react-redux';\n// import styled from 'styled-components';\n// import { getMostPopularPodcast } from '../api/index';\n// import { getPodcastByCategory } from '../api';\n// import { PodcastCard } from '../components/PodcastCard.jsx'\n// import { getUsers } from '../api/index';\n// import { Link } from 'react-router-dom';\n// import { CircularProgress } from '@mui/material';\n\n// const DashboardMain = styled.div`\n// padding: 20px 30px;\n// padding-bottom: 200px;\n// height: 100%;\n// overflow-y: scroll;\n// display: flex;\n// flex-direction: column;\n// gap: 20px;\n// @media (max-width: 768px){\n//   padding: 6px 10px;\n// }\n// `;\n// const FilterContainer = styled.div`\n// display: flex;\n// flex-direction: column;\n// ${({ box, theme }) => box && `\n// background-color: ${theme.bg};\n//   border-radius: 10px;\n//   padding: 20px 30px;\n// `}\n// background-color: ${({ theme }) => theme.bg};\n//   border-radius: 10px;\n//   padding: 20px 30px;\n// `;\n// const Topic = styled.div`\n//   color: ${({ theme }) => theme.text_primary};\n//   font-size: 24px;\n//   font-weight: 540;\n//   display: flex;\n//   justify-content: space-between;\n//   align-items: center;\n//   @maedia (max-width: 768px){\n//     font-size: 18px;\n//   }\n// `;\n// const Span = styled.span`\n//   color: ${({ theme }) => theme.text_secondary};\n//   font-size: 16px;\n//   font-weight: 400;\n//   cursor: pointer;\n//   @media (max-width: 768px){\n//     font-size: 14px;\n//   }\n//   color: ${({ theme }) => theme.primary};\n//   &:hover{\n//     transition: 0.2s ease-in-out;\n//   }\n//   `;\n// const Podcasts = styled.div`\n// display: flex;\n// flex-wrap: wrap;\n// gap: 14px;\n// padding: 18px 6px;\n// //center the items if only one item present\n// @media (max-width: 550px){\n//   justify-content: center;\n// }\n// `;\n\n// const Loader = styled.div`\n// display: flex;\n// justify-content: center;\n// align-items: center;\n// height: 100%;\n// width: 100%;\n// `\n// const DisplayNo = styled.div`\n// display: flex;\n// justify-content: center;\n// align-items: center;\n// height: 100%;\n// width: 100%;\n// color: ${({ theme }) => theme.text_primary};\n// `\n\n// const Dashboard = ({ setSignInOpen }) => {\n//   const [mostPopular, setMostPopular] = useState([]);\n//   const [user, setUser] = useState();\n//   const [comedy, setComedy] = useState([]);\n//   const [news, setNews] = useState([]);\n//   const [sports, setsports] = useState([]);\n//   const [crime, setCrime] = useState([]);\n//   const [loading, setLoading] = useState(false);\n\n//   //user\n//   const { currentUser } = useSelector(state => state.user);\n\n//   const token = localStorage.getItem(\"podstreamtoken\");\n//   const getUser = async () => {\n//     await getUsers(token).then((res) => {\n//       setUser(res.data)\n//     }).then((error) => {\n//       console.log(error)\n//     });\n//   }\n\n//   const getPopularPodcast = async () => {\n//     await getMostPopularPodcast()\n//       .then((res) => {\n//         setMostPopular(res.data)\n//         console.log(res.data)\n//       })\n//       .catch((error) => {\n//         console.log(error)\n//       });\n//   }\n\n//   const getCommedyPodcasts = async () => {\n//     getPodcastByCategory(\"comedy\")\n//       .then((res) => {\n//         setComedy(res.data)\n//         console.log(res.data)\n//       })\n//       .catch((error) => console.log(error));\n//   }\n\n//   const getNewsPodcasts = async () => {\n//     getPodcastByCategory(\"news\")\n//       .then((res) => {\n//         setNews(res.data)\n//         console.log(res.data)\n//       })\n//       .catch((error) => console.log(error));\n//   }\n\n//   const getSportsPodcasts = async () => {\n//     getPodcastByCategory(\"sports\")\n//       .then((res) => {\n//         setsports(res.data)\n//         console.log(res.data)\n//       })\n//       .catch((error) => console.log(error));\n//   }\n\n//   const getCrimePodcasts = async () => {\n//     getPodcastByCategory(\"crime\")\n//       .then((res) => {\n//         setCrime(res.data)\n//         console.log(res.data)\n//       })\n//       .catch((error) => console.log(error));\n//   }\n\n//   const getallData = async () => {\n//     setLoading(true);\n//     if (currentUser) {\n//       setLoading(true);\n//       await getUser();\n//     }\n//     await getPopularPodcast();\n//     await getCommedyPodcasts();\n//     await getNewsPodcasts();\n//     await getCommedyPodcasts();\n//     await getCrimePodcasts();\n//     await getSportsPodcasts();\n//     setLoading(false);\n//   }\n\n//   useEffect(() => {\n//     getallData();\n//   }, [currentUser])\n\n//   return (\n//     <DashboardMain>\n//       {loading ?\n//         <Loader>\n//           <CircularProgress />\n//         </Loader>\n//         :\n//         <>\n//           {currentUser && user?.podcasts?.length > 0 &&\n//             <FilterContainer box={true}>\n//               <Topic>Your Uploads\n//                 <Link to={`/profile`} style={{ textDecoration: \"none\" }}>\n//                   <Span>Show All</Span>\n//                 </Link>\n//               </Topic>\n//               <Podcasts>\n//                 {user?.podcasts.slice(0, 10).map((podcast) => (\n//                   <PodcastCard podcast={podcast} user={user} setSignInOpen={setSignInOpen} />\n//                 ))}\n//               </Podcasts>\n//             </FilterContainer>\n//           }\n//           <FilterContainer>\n//             <Topic>Most Popular\n//               <Link to={`/showpodcasts/mostpopular`} style={{ textDecoration: \"none\" }}>\n//                 <Span>Show All</Span>\n//               </Link>\n//             </Topic>\n//             <Podcasts>\n//               {mostPopular.slice(0, 10).map((podcast) => (\n//                 <PodcastCard podcast={podcast} user={user} setSignInOpen={setSignInOpen} />\n//               ))}\n//             </Podcasts>\n//           </FilterContainer>\n//           <FilterContainer>\n//             <Topic>Comedy\n//               <Link to={`/showpodcasts/comedy`} style={{ textDecoration: \"none\" }}>\n//                 <Span>Show All</Span>\n//               </Link>\n//             </Topic>\n//             <Podcasts>\n//               {comedy.slice(0, 10).map((podcast) => (\n//                 <PodcastCard podcast={podcast} user={user} setSignInOpen={setSignInOpen} />\n//               ))}\n//             </Podcasts>\n//           </FilterContainer>\n//           <FilterContainer>\n//             <Link to={`/showpodcasts/news`} style={{ textDecoration: \"none\" }}>\n//               <Topic>News\n//                 <Span>Show All</Span>\n//               </Topic>\n//             </Link>\n//             <Podcasts>\n//               {news.slice(0, 10).map((podcast) => (\n//                 <PodcastCard podcast={podcast} user={user} setSignInOpen={setSignInOpen} />\n//               ))}\n//             </Podcasts>\n//           </FilterContainer>\n//           <FilterContainer>\n//             <Link to={`/showpodcasts/crime`} style={{ textDecoration: \"none\" }}>\n//               <Topic>Crime\n//                 <Span>Show All</Span>\n//               </Topic>\n//             </Link>\n//             <Podcasts>\n//               {crime.slice(0, 10).map((podcast) => (\n//                 <PodcastCard podcast={podcast} user={user} setSignInOpen={setSignInOpen} />\n//               ))}\n//             </Podcasts>\n//           </FilterContainer>\n//           <FilterContainer>\n//             <Link to={`/showpodcasts/sports`} style={{ textDecoration: \"none\" }}>\n//               <Topic>Sports\n//                 <Span>Show All</Span>\n//               </Topic>\n//             </Link>\n//             <Podcasts>\n//               {sports.slice(0, 10).map((podcast) => (\n//                 <PodcastCard podcast={podcast} user={user} setSignInOpen={setSignInOpen} />\n//               ))}\n//             </Podcasts>\n//           </FilterContainer>\n//         </>\n//       }\n//     </DashboardMain>\n//   )\n// }\n\n// export default Dashboard"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}