{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aditi\\\\OneDrive\\\\Desktop\\\\CASTIFY\\\\client\\\\src\\\\components\\\\Episodecard.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { closePlayer, openPlayer } from '../redux/audioplayerSlice';\nimport { addView } from '../api';\nimport { openSnackbar } from '../redux/snackbarSlice';\nimport PlayCircleOutlineIcon from '@mui/icons-material/PlayCircleOutline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = styled.div`\n    display: flex;\n    flex-direction: row;\n    gap: 20px;\n    align-items: center;\n    padding: 20px 30px;\n    border-radius: 6px;\n    background-color: ${_ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.card;\n}};\n    cursor: pointer;\n    &:hover{\n        cursor: pointer;\n        transform: translateY(-8px);\n        transition: all 0.4s ease-in-out;\n        box-shadow: 0 0 18px 0 rgba(0, 0, 0, 0.3);\n        filter: brightness(1.3);\n    }\n    @media (max-width: 768px){\n        flex-direction: column; \n        align-items: flex-start;\n      }\n`;\n_c = Card;\nconst Image = styled.img`\n    width: 100px;\n    height: 100px;\n    border-radius: 6px;\n    background-color: ${_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.text_secondary;\n}};  \n    object-fit: cover;\n`;\n_c2 = Image;\nconst Details = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    width: 100%;\n`;\n_c3 = Details;\nconst Title = styled.div`\n    font-size: 18px;\n    font-weight: 800;\n    color: ${_ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return theme.text_primary;\n}};\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n`;\n_c4 = Title;\nconst Description = styled.div`\n    font-size: 14px;\n    font-weight: 500;\n    color: ${_ref4 => {\n  let {\n    theme\n  } = _ref4;\n  return theme.text_secondary;\n}};\n`;\n_c5 = Description;\nconst ImageContainer = styled.div`\n    position: relative;\n    width: 100px;\n    height: 100px;\n`;\n_c6 = ImageContainer;\nconst Episodecard = _ref5 => {\n  _s();\n  let {\n    episode,\n    podid,\n    user,\n    type,\n    index\n  } = _ref5;\n  const dispatch = useDispatch();\n  const addviewtToPodcast = async () => {\n    await addView(podid._id).catch(err => {\n      dispatch(openSnackbar({\n        message: err.message,\n        type: \"error\"\n      }));\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    onClick: async () => {\n      await addviewtToPodcast();\n      if (type === \"audio\") {\n        dispatch(openPlayer({\n          type: \"audio\",\n          episode: episode,\n          podid: podid,\n          index: index,\n          currenttime: 0\n        }));\n      } else {\n        dispatch(dispatch(openPlayer({\n          type: \"video\",\n          episode: episode,\n          podid: podid,\n          index: index,\n          currenttime: 0\n        })));\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(ImageContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        src: podid === null || podid === void 0 ? void 0 : podid.thumbnail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PlayCircleOutlineIcon, {\n        style: {\n          position: \"absolute\",\n          top: \"26px\",\n          left: \"26px\",\n          color: \"white\",\n          width: \"50px\",\n          height: \"50px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Details, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: episode.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Description, {\n        children: episode.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n_s(Episodecard, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c7 = Episodecard;\nexport default Episodecard;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"Image\");\n$RefreshReg$(_c3, \"Details\");\n$RefreshReg$(_c4, \"Title\");\n$RefreshReg$(_c5, \"Description\");\n$RefreshReg$(_c6, \"ImageContainer\");\n$RefreshReg$(_c7, \"Episodecard\");","map":{"version":3,"names":["React","useDispatch","styled","closePlayer","openPlayer","addView","openSnackbar","PlayCircleOutlineIcon","jsxDEV","_jsxDEV","Card","div","_ref","theme","card","_c","Image","img","_ref2","text_secondary","_c2","Details","_c3","Title","_ref3","text_primary","_c4","Description","_ref4","_c5","ImageContainer","_c6","Episodecard","_ref5","_s","episode","podid","user","type","index","dispatch","addviewtToPodcast","_id","catch","err","message","onClick","currenttime","children","src","thumbnail","fileName","_jsxFileName","lineNumber","columnNumber","style","position","top","left","color","width","height","name","desc","_c7","$RefreshReg$"],"sources":["C:/Users/aditi/OneDrive/Desktop/CASTIFY/client/src/components/Episodecard.jsx"],"sourcesContent":["import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components'\nimport { closePlayer, openPlayer } from '../redux/audioplayerSlice';\nimport { addView } from '../api';\nimport { openSnackbar } from '../redux/snackbarSlice';\nimport PlayCircleOutlineIcon from '@mui/icons-material/PlayCircleOutline';\n\nconst Card = styled.div`\n    display: flex;\n    flex-direction: row;\n    gap: 20px;\n    align-items: center;\n    padding: 20px 30px;\n    border-radius: 6px;\n    background-color: ${({ theme }) => theme.card};\n    cursor: pointer;\n    &:hover{\n        cursor: pointer;\n        transform: translateY(-8px);\n        transition: all 0.4s ease-in-out;\n        box-shadow: 0 0 18px 0 rgba(0, 0, 0, 0.3);\n        filter: brightness(1.3);\n    }\n    @media (max-width: 768px){\n        flex-direction: column; \n        align-items: flex-start;\n      }\n`;\n\nconst Image = styled.img`\n    width: 100px;\n    height: 100px;\n    border-radius: 6px;\n    background-color: ${({ theme }) => theme.text_secondary};  \n    object-fit: cover;\n`;\n\nconst Details = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    width: 100%;\n`;\n\nconst Title = styled.div`\n    font-size: 18px;\n    font-weight: 800;\n    color: ${({ theme }) => theme.text_primary};\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n`;\n\nconst Description = styled.div`\n    font-size: 14px;\n    font-weight: 500;\n    color: ${({ theme }) => theme.text_secondary};\n`;\nconst ImageContainer = styled.div`\n    position: relative;\n    width: 100px;\n    height: 100px;\n`;\n\n\nconst Episodecard = ({ episode, podid, user, type, index }) => {\n    const dispatch = useDispatch();\n\n    const addviewtToPodcast = async () => {\n        await addView(podid._id).catch((err) => {\n            dispatch(\n                openSnackbar({\n                    message: err.message,\n                    type: \"error\",\n                })\n            );\n        });\n\n    }\n\n    return (\n        <Card onClick={async () => {\n            await addviewtToPodcast();\n            if (type === \"audio\") {\n                dispatch(\n                    openPlayer({\n                        type: \"audio\",\n                        episode: episode,\n                        podid: podid,\n                        index: index,\n                        currenttime: 0\n                    })\n                )\n            } else {\n                dispatch(\n                    dispatch(\n                        openPlayer({\n                            type: \"video\",\n                            episode: episode,\n                            podid: podid,\n                            index: index,\n                            currenttime: 0\n                        })\n                    )\n                )\n            }\n        }}>\n            <ImageContainer>\n                <Image src={podid?.thumbnail} />\n                <PlayCircleOutlineIcon style={{position:\"absolute\",top:\"26px\",left:\"26px\",color:\"white\",width:\"50px\",height:\"50px\"}}/>\n            </ImageContainer>\n            <Details>\n                <Title>{episode.name}</Title>\n                <Description>{episode.desc}</Description>\n            </Details>\n        </Card>\n    )\n}\n\nexport default Episodecard"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}