{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aditi\\\\OneDrive\\\\Desktop\\\\CASTIFY\\\\client\\\\src\\\\pages\\\\DisplayPodcasts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPodcastByCategory, getMostPopularPodcast } from '../api/index.js';\nimport styled from 'styled-components';\nimport { PodcastCard } from '../components/PodcastCard.jsx';\nimport { useDispatch } from \"react-redux\";\nimport { openSnackbar } from \"../redux/snackbarSlice\";\nimport { displayPodcastFailure } from '../redux/userSlice.jsx';\nimport { CircularProgress } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DisplayMain = styled.div`\ndisplay: flex;\npadding: 30px 30px;\nflex-direction: column;\nheight: 100%;\noverflow-y: scroll;\n`;\n_c = DisplayMain;\nconst Topic = styled.div`\n  color: ${_ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.text_primary;\n}};\n  font-size: 24px;\n  font-weight: 540;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n_c2 = Topic;\nconst Podcasts = styled.div`\ndisplay: flex;\nflex-wrap: wrap;\nheight: 100%;\ngap: 10px;\npadding: 30px 0px;\n`;\n_c3 = Podcasts;\nconst Container = styled.div`\nbackground-color: ${_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.bg;\n}};\npadding: 20px;\nborder-radius: 6px;\nmin-height: 400px;\n`;\n_c4 = Container;\nconst Loader = styled.div`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 100%;\nwidth: 100%;\n`;\n_c5 = Loader;\nconst DisplayNo = styled.div`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 100%;\nwidth: 100%;\ncolor: ${_ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return theme.text_primary;\n}};\n`;\n_c6 = DisplayNo;\nconst DisplayPodcasts = () => {\n  _s();\n  const {\n    type\n  } = useParams();\n  const [podcasts, setPodcasts] = useState([]);\n  const [string, setString] = useState(\"\");\n  const dispatch = useDispatch();\n  const [Loading, setLoading] = useState(false);\n  const mostPopular = async () => {\n    await getMostPopularPodcast().then(res => {\n      setPodcasts(res.data);\n    }).catch(err => {\n      dispatch(openSnackbar({\n        message: err.message,\n        severity: \"error\"\n      }));\n    });\n  };\n  const getCategory = async () => {\n    await getPodcastByCategory(type).then(res => {\n      setPodcasts(res.data);\n    }).catch(err => {\n      dispatch(openSnackbar({\n        message: err.message,\n        severity: \"error\"\n      }));\n    });\n  };\n  const getallpodcasts = async () => {\n    if (type === 'mostpopular') {\n      setLoading(true);\n      let arr = type.split(\"\");\n      arr[0] = arr[0].toUpperCase();\n      arr.splice(4, 0, \" \");\n      setString(arr.join(\"\"));\n      console.log(string);\n      await mostPopular();\n      setLoading(false);\n    } else {\n      setLoading(true);\n      let arr = type.split(\"\");\n      arr[0] = arr[0].toUpperCase();\n      setString(arr);\n      await getCategory();\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    getallpodcasts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DisplayMain, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Topic, {\n        children: string\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), Loading ? /*#__PURE__*/_jsxDEV(Loader, {\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Podcasts, {\n        children: [podcasts.length === 0 && /*#__PURE__*/_jsxDEV(DisplayNo, {\n          children: \"No Podcasts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 51\n        }, this), podcasts.map(podcast => /*#__PURE__*/_jsxDEV(PodcastCard, {\n          podcast: podcast\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n};\n_s(DisplayPodcasts, \"Ks9irKQ+p/2pPix2lYOThLiqk2w=\", false, function () {\n  return [useParams, useDispatch];\n});\n_c7 = DisplayPodcasts;\nexport default DisplayPodcasts;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"DisplayMain\");\n$RefreshReg$(_c2, \"Topic\");\n$RefreshReg$(_c3, \"Podcasts\");\n$RefreshReg$(_c4, \"Container\");\n$RefreshReg$(_c5, \"Loader\");\n$RefreshReg$(_c6, \"DisplayNo\");\n$RefreshReg$(_c7, \"DisplayPodcasts\");","map":{"version":3,"names":["React","useState","useEffect","useParams","getPodcastByCategory","getMostPopularPodcast","styled","PodcastCard","useDispatch","openSnackbar","displayPodcastFailure","CircularProgress","jsxDEV","_jsxDEV","DisplayMain","div","_c","Topic","_ref","theme","text_primary","_c2","Podcasts","_c3","Container","_ref2","bg","_c4","Loader","_c5","DisplayNo","_ref3","_c6","DisplayPodcasts","_s","type","podcasts","setPodcasts","string","setString","dispatch","Loading","setLoading","mostPopular","then","res","data","catch","err","message","severity","getCategory","getallpodcasts","arr","split","toUpperCase","splice","join","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","podcast","_c7","$RefreshReg$"],"sources":["C:/Users/aditi/OneDrive/Desktop/CASTIFY/client/src/pages/DisplayPodcasts.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom';\nimport { getPodcastByCategory, getMostPopularPodcast } from '../api/index.js';\nimport styled from 'styled-components';\nimport { PodcastCard } from '../components/PodcastCard.jsx';\nimport { useDispatch } from \"react-redux\";\nimport { openSnackbar } from \"../redux/snackbarSlice\";\nimport { displayPodcastFailure } from '../redux/userSlice.jsx';\nimport { CircularProgress } from '@mui/material';\n\nconst DisplayMain = styled.div`\ndisplay: flex;\npadding: 30px 30px;\nflex-direction: column;\nheight: 100%;\noverflow-y: scroll;\n`\nconst Topic = styled.div`\n  color: ${({ theme }) => theme.text_primary};\n  font-size: 24px;\n  font-weight: 540;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\nconst Podcasts = styled.div`\ndisplay: flex;\nflex-wrap: wrap;\nheight: 100%;\ngap: 10px;\npadding: 30px 0px;\n`\nconst Container = styled.div`\nbackground-color: ${({ theme }) => theme.bg};\npadding: 20px;\nborder-radius: 6px;\nmin-height: 400px;\n`\n\nconst Loader = styled.div`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 100%;\nwidth: 100%;\n`\nconst DisplayNo = styled.div`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nheight: 100%;\nwidth: 100%;\ncolor: ${({ theme }) => theme.text_primary};\n`\n\n\n\n\nconst DisplayPodcasts = () => {\n    const { type } = useParams();\n    const [podcasts, setPodcasts] = useState([]);\n    const [string, setString] = useState(\"\");\n    const dispatch = useDispatch();\n    const [Loading, setLoading] = useState(false);\n\n    const mostPopular = async () => {\n        await getMostPopularPodcast()\n            .then((res) => {\n                setPodcasts(res.data)\n            })\n            .catch((err) => {\n                dispatch(\n                    openSnackbar({\n                        message: err.message,\n                        severity: \"error\",\n                    })\n                );\n            });\n    }\n    const getCategory = async () => {\n        await getPodcastByCategory(type)\n            .then((res) => {\n                setPodcasts(res.data)\n            })\n            .catch((err) => {\n                dispatch(\n                    openSnackbar({\n                        message: err.message,\n                        severity: \"error\",\n                    })\n                );\n            });\n\n    }\n\n    const getallpodcasts = async () => {\n        if (type === 'mostpopular') {\n            setLoading(true);\n            let arr = type.split(\"\");\n            arr[0] = arr[0].toUpperCase();\n            arr.splice(4, 0, \" \");\n            setString(arr.join(\"\"));\n            console.log(string);\n            await mostPopular();\n            setLoading(false);\n        }\n        else {\n            setLoading(true);\n            let arr = type.split(\"\");\n            arr[0] = arr[0].toUpperCase();\n            setString(arr);\n            await getCategory();\n            setLoading(false);\n        }\n    }\n\n    useEffect(() => {\n        getallpodcasts();\n\n    }, [])\n    return (\n        <DisplayMain>\n            <Container>\n                <Topic>{string}</Topic>\n                {Loading ? \n                <Loader>\n                    <CircularProgress />\n                </Loader>\n                 :\n                    <Podcasts>\n                        {podcasts.length === 0 && <DisplayNo>No Podcasts</DisplayNo>}\n                        {podcasts.map((podcast) => (\n                            <PodcastCard podcast={podcast} />\n                        ))}\n                    </Podcasts>\n                }\n            </Container>\n        </DisplayMain>\n    )\n}\n\nexport default DisplayPodcasts"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,oBAAoB,EAAEC,qBAAqB,QAAQ,iBAAiB;AAC7E,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,WAAW,QAAQ,+BAA+B;AAC3D,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,YAAY,QAAQ,wBAAwB;AACrD,SAASC,qBAAqB,QAAQ,wBAAwB;AAC9D,SAASC,gBAAgB,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,WAAW,GAAGR,MAAM,CAACS,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA,CAAC;AAAAC,EAAA,GANKF,WAAW;AAOjB,MAAMG,KAAK,GAAGX,MAAM,CAACS,GAAI;AACzB,WAAWG,IAAA;EAAA,IAAC;IAAEC;EAAM,CAAC,GAAAD,IAAA;EAAA,OAAKC,KAAK,CAACC,YAAY;AAAA,CAAC;AAC7C;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAPIJ,KAAK;AAQX,MAAMK,QAAQ,GAAGhB,MAAM,CAACS,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA,CAAC;AAAAQ,GAAA,GANKD,QAAQ;AAOd,MAAME,SAAS,GAAGlB,MAAM,CAACS,GAAI;AAC7B,oBAAoBU,KAAA;EAAA,IAAC;IAAEN;EAAM,CAAC,GAAAM,KAAA;EAAA,OAAKN,KAAK,CAACO,EAAE;AAAA,CAAC;AAC5C;AACA;AACA;AACA,CAAC;AAAAC,GAAA,GALKH,SAAS;AAOf,MAAMI,MAAM,GAAGtB,MAAM,CAACS,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA,CAAC;AAAAc,GAAA,GANKD,MAAM;AAOZ,MAAME,SAAS,GAAGxB,MAAM,CAACS,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA,SAASgB,KAAA;EAAA,IAAC;IAAEZ;EAAM,CAAC,GAAAY,KAAA;EAAA,OAAKZ,KAAK,CAACC,YAAY;AAAA,CAAC;AAC3C,CAAC;AAAAY,GAAA,GAPKF,SAAS;AAYf,MAAMG,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAK,CAAC,GAAGhC,SAAS,EAAE;EAC5B,MAAM,CAACiC,QAAQ,EAAEC,WAAW,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACqC,MAAM,EAAEC,SAAS,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMuC,QAAQ,GAAGhC,WAAW,EAAE;EAC9B,MAAM,CAACiC,OAAO,EAAEC,UAAU,CAAC,GAAGzC,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAM0C,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMtC,qBAAqB,EAAE,CACxBuC,IAAI,CAAEC,GAAG,IAAK;MACXR,WAAW,CAACQ,GAAG,CAACC,IAAI,CAAC;IACzB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;MACZR,QAAQ,CACJ/B,YAAY,CAAC;QACTwC,OAAO,EAAED,GAAG,CAACC,OAAO;QACpBC,QAAQ,EAAE;MACd,CAAC,CAAC,CACL;IACL,CAAC,CAAC;EACV,CAAC;EACD,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAM/C,oBAAoB,CAAC+B,IAAI,CAAC,CAC3BS,IAAI,CAAEC,GAAG,IAAK;MACXR,WAAW,CAACQ,GAAG,CAACC,IAAI,CAAC;IACzB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;MACZR,QAAQ,CACJ/B,YAAY,CAAC;QACTwC,OAAO,EAAED,GAAG,CAACC,OAAO;QACpBC,QAAQ,EAAE;MACd,CAAC,CAAC,CACL;IACL,CAAC,CAAC;EAEV,CAAC;EAED,MAAME,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAIjB,IAAI,KAAK,aAAa,EAAE;MACxBO,UAAU,CAAC,IAAI,CAAC;MAChB,IAAIW,GAAG,GAAGlB,IAAI,CAACmB,KAAK,CAAC,EAAE,CAAC;MACxBD,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,CAACE,WAAW,EAAE;MAC7BF,GAAG,CAACG,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;MACrBjB,SAAS,CAACc,GAAG,CAACI,IAAI,CAAC,EAAE,CAAC,CAAC;MACvBC,OAAO,CAACC,GAAG,CAACrB,MAAM,CAAC;MACnB,MAAMK,WAAW,EAAE;MACnBD,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,MACI;MACDA,UAAU,CAAC,IAAI,CAAC;MAChB,IAAIW,GAAG,GAAGlB,IAAI,CAACmB,KAAK,CAAC,EAAE,CAAC;MACxBD,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,CAACE,WAAW,EAAE;MAC7BhB,SAAS,CAACc,GAAG,CAAC;MACd,MAAMF,WAAW,EAAE;MACnBT,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAEDxC,SAAS,CAAC,MAAM;IACZkD,cAAc,EAAE;EAEpB,CAAC,EAAE,EAAE,CAAC;EACN,oBACIvC,OAAA,CAACC,WAAW;IAAA8C,QAAA,eACR/C,OAAA,CAACW,SAAS;MAAAoC,QAAA,gBACN/C,OAAA,CAACI,KAAK;QAAA2C,QAAA,EAAEtB;MAAM;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,EACtBvB,OAAO,gBACR5B,OAAA,CAACe,MAAM;QAAAgC,QAAA,eACH/C,OAAA,CAACF,gBAAgB;UAAAkD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACf,gBAELnD,OAAA,CAACS,QAAQ;QAAAsC,QAAA,GACJxB,QAAQ,CAAC6B,MAAM,KAAK,CAAC,iBAAIpD,OAAA,CAACiB,SAAS;UAAA8B,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAY,EAC3D5B,QAAQ,CAAC8B,GAAG,CAAEC,OAAO,iBAClBtD,OAAA,CAACN,WAAW;UAAC4D,OAAO,EAAEA;QAAQ;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACjC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACK;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAEP;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEtB,CAAC;AAAA9B,EAAA,CAjFKD,eAAe;EAAA,QACA9B,SAAS,EAGTK,WAAW;AAAA;AAAA4D,GAAA,GAJ1BnC,eAAe;AAmFrB,eAAeA,eAAe;AAAA,IAAAjB,EAAA,EAAAK,GAAA,EAAAE,GAAA,EAAAI,GAAA,EAAAE,GAAA,EAAAG,GAAA,EAAAoC,GAAA;AAAAC,YAAA,CAAArD,EAAA;AAAAqD,YAAA,CAAAhD,GAAA;AAAAgD,YAAA,CAAA9C,GAAA;AAAA8C,YAAA,CAAA1C,GAAA;AAAA0C,YAAA,CAAAxC,GAAA;AAAAwC,YAAA,CAAArC,GAAA;AAAAqC,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}